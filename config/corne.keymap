/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E      &kp R      &kp T        &kp Y            &kp U           &kp I       &kp O    &kp P          &kp DELETE
&sk LALT    &kp A  &kp S  &kp D      &kp F      &kp G        &kp H            &kp J           &kp K       &kp L    &kp SEMICOLON  &kp SQT
&sk LSHIFT  &kp Z  &kp X  &kp C      &kp V      &kp B        &kp N            &kp M           &kp COMMA   &kp DOT  &kp FSLH       &mo 3
                          &sk LCTRL  &kp SPACE  &lt 1 TAB    &lt 2 BACKSPACE  &mt LGUI ENTER  &sk RSHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL  |
            // | SHFT | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT | CAPS|      |
            // | CTRL |     |     |     |     |     |   |     |     |     |     |     | BTCLR|
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp POUND     &kp DOLLAR        &kp PERCENT       &kp CARET        &kp AMPERSAND      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_5      &kp NUMBER_6     &kp NUMBER_7       &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0           &trans
&trans  &trans           &kp TILDE     &kp GRAVE     &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &trans        &trans                &trans                 &trans
                                       &kp ESCAPE    &trans            &trans            &trans           &trans             &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | SHFT |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | CTRL |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&trans  &kp DEL   &trans   &kp MINUS       &kp PLUS   &kp PAGE_UP      &trans            &trans          &trans        &kp BACKSLASH      &kp PIPE         &trans
&trans  &kp HOME  &kp END  &kp UNDERSCORE  &kp EQUAL  &kp PAGE_DOWN    &kp LEFT_ARROW    &kp DOWN        &kp UP_ARROW  &kp RIGHT_ARROW    &trans           &trans
&trans  &trans    &trans   &trans          &trans     &trans           &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans
                           &trans          &trans     &trans           &trans            &trans          &trans
            >;
        };

        Function_Layer {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans   &trans   &bt BT_CLR
&kp F1  &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &kp CAPSLOCK  &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans   &trans   &trans
                                    &trans        &trans        &trans          &trans  &trans  &trans
            >;

            label = "Func";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
