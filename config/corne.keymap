/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            flavor = "tap-preferred";
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "tap-preferred";
        };

        layer_1_and_3: layer_1_and_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_1_AND_3";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 3>;

            tapping-term-ms = <400>;
        };
    };

    combos {
        compatible = "zmk,combos";

        toggle_gaming {
            bindings = <&tog 0>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E      &kp R               &kp T        &kp Y            &kp U      &kp I      &kp O    &kp P          &kp DELETE
&sk LALT    &kp A  &kp S  &kp D      &kp F               &kp G        &kp H            &kp J      &kp K      &kp L    &kp SEMICOLON  &kp SQT
&kp LSHIFT  &kp Z  &kp X  &kp C      &kp V               &kp B        &kp N            &kp M      &kp COMMA  &kp DOT  &kp FSLH       &tog 3
                          &sk LCTRL  &mt LEFT_GUI ENTER  &lt 1 TAB    &lt 2 BACKSPACE  &kp SPACE  &sk RSHFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL  |
            // | SHFT | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT | CAPS|      |
            // | CTRL |     |     |     |     |     |   |     |     |     |     |     | BTCLR|
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp POUND     &kp DOLLAR        &kp PERCENT       &kp CARET        &kp AMPERSAND      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_5      &kp NUMBER_6     &kp NUMBER_7       &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0           &trans
&trans  &trans           &kp TILDE     &kp GRAVE     &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &trans        &trans                &trans                 &trans
                                       &trans        &trans            &trans            &trans           &trans             &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | SHFT |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | CTRL |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&trans  &kp DEL   &trans   &kp UNDERSCORE        &kp PLUS               &kp PAGE_UP      &trans            &trans          &trans        &kp BACKSLASH      &kp PIPE         &trans
&trans  &kp HOME  &kp END  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PAGE_DOWN    &kp LEFT_ARROW    &kp DOWN        &kp UP_ARROW  &kp RIGHT_ARROW    &trans           &trans
&trans  &trans    &trans   &trans                &trans                 &trans           &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans
                           &trans                &trans                 &trans           &trans            &trans          &trans
            >;
        };

        Function_Layer {
            bindings = <
&trans  &kp C_PREV  &kp C_REWIND  &kp C_PLAY_PAUSE  &kp C_FAST_FORWARD  &kp C_NEXT    &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DEC  &kp C_BRI_INC  &trans
&kp F1  &kp F2      &kp F3        &kp F4            &kp F5              &kp F6        &kp F7      &kp F8        &kp F9        &kp F10        &kp F11        &kp F12
&trans  &trans      &trans        &trans            &trans              &trans        &kp INSERT  &kp HOME      &kp END       &kp PAGE_UP    &kp PAGE_DOWN  &trans
                                  &kp LSHIFT        &trans              &trans        &trans      &trans        &trans
            >;

            label = "Func";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
